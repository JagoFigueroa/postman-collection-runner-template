{
	"info": {
		"_postman_id": "8561f2eb-ab05-4be8-95f1-5b820f4cb75b",
		"name": "Rick y Morty API",
		"description": "Url base para la API **GraphQL**:\nhttps://rickandmortyapi.com/graphql\n\nUrl base para la API **REST**:\nhttps://rickandmortyapi.com/api\n\nEn el caso de la API **REST**, deberás añadirla como variable global o de entorno con el nombre `restBaseUrl`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26482288",
		"_collection_link": "https://safe-core.postman.co/workspace/Team-Workspace~59a9d14f-1f40-4e14-80cd-9a078efdf6d8/collection/26482288-8561f2eb-ab05-4be8-95f1-5b820f4cb75b?action=share&source=collection_link&creator=26482288"
	},
	"item": [
		{
			"name": "character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has the expected parameters\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).eq(11);",
							"    pm.expect(jsonData.name).to.eq(\"Albert Einstein\");",
							"    pm.expect(jsonData.status).to.eq(\"Dead\");",
							"    pm.expect(jsonData.species).to.eq(\"Human\");",
							"    pm.expect(jsonData.type).to.be.a(\"String\");",
							"    pm.expect(jsonData.gender).to.eq(\"Male\");",
							"    pm.expect(jsonData.origin).to.be.an(\"object\");",
							"    pm.expect(jsonData.origin.name).to.eq(\"Earth (C-137)\");",
							"    pm.expect(jsonData.origin.url).to.eq(\"https://rickandmortyapi.com/api/location/1\");",
							"    pm.expect(jsonData.location).to.be.an(\"object\");",
							"    pm.expect(jsonData.location.name).to.eq(\"Earth (Replacement Dimension)\");",
							"    pm.expect(jsonData.location.url).to.eq(\"https://rickandmortyapi.com/api/location/20\");",
							"    pm.expect(jsonData.image).to.eq(\"https://rickandmortyapi.com/api/character/avatar/11.jpeg\");",
							"    pm.expect(jsonData.episode).to.be.an(\"array\");",
							"    pm.expect(jsonData.url).to.eq(\"https://rickandmortyapi.com/api/character/11\")",
							"    pm.expect(jsonData.created).to.eq(\"2017-11-04T20:20:20.965Z\")",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/character/11",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"character",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "locations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has the expected parameters\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.info).to.exist;",
							"    pm.expect(jsonData.info.count).to.be.a(\"number\");",
							"    pm.expect(jsonData.info.pages).to.be.a(\"number\");",
							"    pm.expect(jsonData.info.next).to.be.a(\"string\");",
							"    pm.expect(jsonData.info.prev).to.eq(null);",
							"    pm.expect(jsonData.results).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/location",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"location"
					]
				}
			},
			"response": []
		}
	]
}